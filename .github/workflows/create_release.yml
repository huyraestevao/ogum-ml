name: Create Release (tag + GitHub Release)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Versão (ex.: 1.0.0)"
        required: true
        type: string
      release_notes:
        description: "Notas da release (Markdown opcional)"
        required: false
        type: string
      bump_pyproject:
        description: "Sincronizar versão no pyproject.toml?"
        required: false
        default: true
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # necessário para criar tag/release com GITHUB_TOKEN
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: (Opcional) Bump version in pyproject.toml
        if: ${{ inputs.bump_pyproject == true }}
        run: |
          python -m pip install --upgrade tomli tomli-w
          python tools/bump_version.py --file pyproject.toml --version "${{ inputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore: bump version to ${{ inputs.version }}"

      - name: Check if tag already exists
        run: |
          if git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ inputs.version }} já existe. Abortando."
            exit 1
          fi

      - name: Create tag and push
        run: |
          git tag "v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ inputs.version }}"
          name: "Ogum-ML v${{ inputs.version }}"
          body: ${{ inputs.release_notes }}
          draft: false
          prerelease: false
